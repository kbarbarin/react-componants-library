{"ast":null,"code":"var _jsxFileName = \"/Users/killianbarbarin/Desktop/react-components-library/src/components/DropDownMenu/DropDownMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './DropDownMenu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dropdown(props) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const {\n    label,\n    onItemClick\n  } = props;\n  const items = React.Children.toArray(props.children);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dropdown ${isOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropdown-toggle\",\n      onClick: toggleDropdown,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => onItemClick(item),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Dropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dropdown","props","_s","isOpen","setIsOpen","toggleDropdown","label","onItemClick","items","Children","toArray","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","_c","$RefreshReg$"],"sources":["/Users/killianbarbarin/Desktop/react-components-library/src/components/DropDownMenu/DropDownMenu.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './DropDownMenu.css';\n\nexport default function Dropdown(props) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const { label, onItemClick } = props;\n\n    const items = React.Children.toArray(props.children);\n\n    return (\n        <div className={`dropdown ${isOpen ? 'open' : ''}`}>\n            <button className=\"dropdown-toggle\" onClick={toggleDropdown}>\n                {label}\n            </button>\n            {isOpen && (\n                <ul className=\"dropdown-menu\">\n                    {items.map((item, index) => (\n                        <li key={index} onClick={() => onItemClick(item)}>\n                            {item}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IACzBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,MAAM;IAAEG,KAAK;IAAEC;EAAY,CAAC,GAAGN,KAAK;EAEpC,MAAMO,KAAK,GAAGZ,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACT,KAAK,CAACU,QAAQ,CAAC;EAEpD,oBACIZ,OAAA;IAAKa,SAAS,EAAG,YAAWT,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAAAQ,QAAA,gBAC/CZ,OAAA;MAAQa,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAER,cAAe;MAAAM,QAAA,EACvDL;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EACRd,MAAM,iBACHJ,OAAA;MAAIa,SAAS,EAAC,eAAe;MAAAD,QAAA,EACxBH,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBrB,OAAA;QAAgBc,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACY,IAAI,CAAE;QAAAR,QAAA,EAC5CQ;MAAI,GADAC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd;AAACf,EAAA,CA5BuBF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}